=============
hash-password
=============

-------------------------
Generate passwords hashes
-------------------------

:Author: Sébastien Gross <seb•ɑƬ•chezwam•ɖɵʈ•org>
:Date: 2009-12-15
:Copyright: GPL v3
:Manual section: 1
:Manual group: Password manipulation

SYNOPSIS
========

  hash-password [ options ] [ password ]

DESCRIPTION
===========

hash-password converts a given or generated password into its representation
using many hashing methods.

If ``password`` is not defined, a random password is generated
according given character classes. 

OPTIONS
=======

-h, --help                  Show help message and exit
-c CHARS, --chars=CHARS     Password length (default: 10)
-s SALT, --salt=SALT        Password salt (default: random)
-L, --no-lower              Do not use lower case chars (default: True)
-U, --no-upper              Do not use upper case chars (default: True)
-D, --no-digit              Do not use digit chars (default: True)
-p, --punctuation           Use ponctuation chars (default: False)
-k KEYMAP, --keymap=KEYMAP  Make sure password is same in qwerty and KEYMAP
  (default: none)

HASH ALGORITHMS
===============

apr1
----

Apache specific hash function. This is a 1,000-time iterated MD5
message digest of various combinations of a random 32-bit salt and the
passowrd.

This is the same algorithm as ``crypted_md5`` but using ``apr1`` as
magical prefix.

The salt consists of the $-delimited string after the ``apr1`` prefix.

See also ``crypted_md5``.

b64
---

Base 64 encoding.

clear
-----

Clear text form.

.. note:: This is not really a hashing method. Use carefully.


crypt
-----

UN*X classical crypt(3) library function which is used to compute a
password hash.

Salt consists of the first 2 characters of the result hash.

crypted_md5
-----------

Crypted MD5 hash.

This is the same algorithm as ``apr1`` but using ``1`` as magical
prefix.

The salt consists of the $-delimited string after the ``1`` prefix.

See also ``apr1``.

md5
---

128-bit (32 hexadecimal digits) MD5 hashes (also termed message
digests) of the password.

See also ``md5_64``.

md5_64
------

Base 64 encoded MD5 message digest of the password.

See also ``md5``.

mysql
-----

MySQL password encryption. This consists of a 2-pass SHA1 message
digest uppercased and prefixed with a `*`.

mysql_old
---------

MySQL (pre-4.1) password encryption.

nt
--

Windows NT hash. This consists of a uppercase hexadecimal MD4 message
digest of a ``utf-16-le``-encoded representation of the password.

ntlm
----

NT LAN Manager hash.

sha1
----

160-bit (40 hexadecimal digits) SHA1 hash of the password.

See also: ``sha1_64``.

sha1_64
-------

Base 64 encoded SHA1 message digest of the password.

See also: ``sha1``.

smd5
----

Base 64 representation of both password MD5 digest and salt.

Salt is append to the 128-bit MD5 representation of the password.


ssha
----

Base 64 representation of both password SHA1 digest and salt.

Salt is append to the 160-bit SHA1 representation of the password.

BUGS
====

No time to include bugs, command actions might seldom lead astray
user's assumption.


COPYRIGHT
=========

Copyright © 2009 Sébastien Gross <seb•ɑƬ•chezwam•ɖɵʈ•org>
Released under GPL, see http://gnu.org for further information.


.. vim:tw=70:ts=2:sts=2:sw=2:spl=en:syntax=rst:set et:
